{"version":3,"sources":["main.js"],"names":["loadRandomImage","$","remove","randomSeed","Math","floor","random","imageURL","concat","Image","img","src","alt","hide","onload","append","addEmail","emailInput","document","getElementById","email","value","trim","console","log","selects","test","showMessage","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","options","Symbol","iterator","next","done","toLowerCase","err","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","option","newOption","createElement","select","appendChild","placeholder","querySelector","dispatchEvent","Event","addToCollection","containerImage","textContent","selectedValue","collectionGroup","id","classList","add","collectionsDiv","imageDiv","clonedImage","imageSrc","deleteBtn","firstSelect","type","text","message","addEventListener","content","container","collectionsSelect","selectedId","event","target","querySelectorAll","forEach","collection","style","display"],"mappings":"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","file":"main.min.js","sourcesContent":["\r\nfunction loadRandomImage() {\r\n    $(\".loader\").show(); // show loader\r\n    $(\".container-image img\").remove(); // remove old image\r\n\r\n    let randomSeed = Math.floor(Math.random() * 1000000);\r\n    let imageURL = `https://picsum.photos/seed/${randomSeed}/600/400`;\r\n\r\n    let img = new Image();\r\n    img.src = imageURL;\r\n    img.alt = \"Random Image\";\r\n    img.onload = function () {\r\n        $(\".loader\").hide(); // hide loader\r\n        $(\".container-image\").append(img); // show image\r\n    };\r\n}\r\n\r\nfunction addEmail() {\r\n    const emailInput = document.getElementById(\"email\");\r\n    const email = emailInput.value.trim();\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const selects = document.querySelectorAll(\".selected\");\r\n    console.log(selects)\r\n\r\n    // Validation using regex (also check not empty)\r\n    if (email !== \"\" && !emailRegex.test(email)) {\r\n        showMessage(\"error\", \"Please enter a valid email address\");\r\n        return;\r\n    } else if (email == \"\") {\r\n        showMessage(\"error\", \"Please enter an email address\")\r\n        return;\r\n    }\r\n\r\n    // Check for duplicates\r\n    for (let option of selects[0].options) {\r\n        if (option.value.toLowerCase() === email.toLowerCase()) {\r\n            showMessage(\"error\", \"This email is already in the list.\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    // Create new option element\r\n    for (let select of selects) {\r\n        const newOption = document.createElement(\"option\");\r\n        newOption.value = email;\r\n        newOption.textContent = email;\r\n        select.appendChild(newOption);\r\n\r\n        // Remove placeholder option if it exists\r\n        const placeholder = select.querySelector(\"option[value=none]\")\r\n        if (placeholder) {\r\n            placeholder.remove();\r\n        }\r\n\r\n        // Make the new email the selected option\r\n        select.value = email;\r\n\r\n        // Trigger the change event manually\r\n        select.dispatchEvent(new Event(\"change\"));\r\n    }\r\n\r\n    // Reset input field\r\n    emailInput.value = \"\";\r\n\r\n    // Show success message\r\n    showMessage(\"success\", \"Email added\");\r\n}\r\n\r\nloadRandomImage();\r\n\r\nfunction addToCollection() {\r\n    const containerImage = document.querySelector(\".container-image img\"); \r\n    const imageSrc = containerImage.src;\r\n    const collectionsDiv = document.querySelector(\".collections\");\r\n    const firstSelect = document.querySelector(\".address .selected\");\r\n    const selectedValue = firstSelect.value;\r\n\r\n    if (selectedValue === \"none\") {\r\n        showMessage(\"error\", \"Please select an email first.\");\r\n        return;\r\n    }\r\n\r\n    if (!containerImage) {\r\n        showMessage(\"error\", \"Please generate an image first.\");\r\n        return;\r\n    }\r\n\r\n    // Get or create the collection container\r\n    let collectionGroup = document.getElementById(selectedValue);\r\n    if (!collectionGroup) {\r\n        collectionGroup = document.createElement(\"div\");\r\n        collectionGroup.id = selectedValue;\r\n        collectionGroup.classList.add(\"collection-group\");\r\n        collectionsDiv.appendChild(collectionGroup);\r\n    }\r\n\r\n    // Check for duplicates\r\n    const duplicate = collectionGroup.querySelector(`img[src=\"${containerImage.src}\"]`);\r\n    if (duplicate) {\r\n        showMessage(\"error\", \"This image is already in this collection.\");\r\n        return;\r\n    }\r\n\r\n    // Create wrapper for image + delete button\r\n    const imageDiv = document.createElement(\"div\");\r\n    imageDiv.classList.add(\"image-wrapper\");\r\n\r\n    // Clone the current image\r\n    const clonedImage = document.createElement(\"img\");\r\n    clonedImage.src = imageSrc;\r\n    clonedImage.alt = containerImage.alt || \"Collected Image\";\r\n\r\n    // Create delete button\r\n    const deleteBtn = document.createElement(\"span\");\r\n    deleteBtn.classList.add(\"delete-btn\");\r\n    deleteBtn.innerHTML = \"x\";\r\n\r\n    // Add event to remove image on click\r\n    deleteBtn.addEventListener(\"click\", () => {\r\n        imageDiv.remove();\r\n\r\n        // Successful removal message\r\n        showMessage(\"success\", \"Image has been removed from collection\");\r\n    });\r\n\r\n    // Add image and button to wrapper\r\n    imageDiv.append(clonedImage, deleteBtn);\r\n\r\n    // Add to collection\r\n    collectionGroup.append(imageDiv);\r\n\r\n    // Show success message\r\n    showMessage(\"success\", \"Image added to the collection\");\r\n}\r\n\r\nconst collectionsSelect = document.querySelector(\".main-content-2 .select .selected\");\r\n\r\ncollectionsSelect.addEventListener(\"change\", (event) => {\r\n    const selectedId = event.target.value;\r\n\r\n    // Select all collection group divs inside .collections\r\n    const allCollections = document.querySelectorAll(\".collections > div.collection-group\");\r\n\r\n    allCollections.forEach(collection => {\r\n        if (collection.id === selectedId) {\r\n            collection.style.display = \"flex\"; // show the matching one\r\n        } else {\r\n            collection.style.display = \"none\"; // hide all others\r\n        }\r\n    });\r\n});\r\n\r\n// Success and Error messages\r\nfunction showMessage(type, text) {\r\n    const container = document.querySelector(\".messages-container\");\r\n\r\n    // Create a new message\r\n    const message = document.createElement(\"div\");\r\n    message.classList.add(\"message\", type);\r\n    \r\n    const content = document.createElement(\"p\");\r\n    content.textContent = text;\r\n    message.append(content);\r\n\r\n    // Add to container\r\n    container.append(message);\r\n\r\n    // Make sure to trigger CSS transition\r\n    setTimeout(() => message.classList.add(\"show\"), 10);\r\n\r\n    // Auto-remove after 3s\r\n    setTimeout(() => {\r\n        message.classList.remove(\"show\");\r\n        setTimeout(() => message.remove(), 300);\r\n    }, 3000);\r\n}\r\n"]}